<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACIAAAAiCAYAAAA6RwvCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABMVJREFUWEftl21MU1cYx/dlWbJs+7IszMVsY1M2DCbizFYgFKS8tr0tVDY0ohDY
        CwgLyzB+WJyZBdlm4Jt7BXWBD0yForwoIB0IFDVDcYiim3MjfliyCrTQe29bRv97zilFQIbSdNk+8DT/
        3HvOaf/PL8+5HJ77CP4nsQKyMFZAFsY8ENvEJApLKhAUqcazURqSNsDScO/3KYdt0jGT1RuzINMeDwqM
        5YjJzIfl0hV0Xuwn/Rhg9XNvZWYBCo0V8FBOX8yCjNkmsFqpw81btzE95YIkOiA6AivmybxZDpZrzD4x
        k30BSBCV7vadO7DbbLCOjgHyXcAZIJEX82TeLAfLtSjIOE2uon389fcR2OjL7MdrmiRsaBUXVfgc/dP6
        xrZ76y+TF/Nk3iwHy8Vy+uJ+kBEGYgfcVjx6QkJwk4g1zSJCWqRZraUxm3+RxK5rm2mOz3sV0iIi6KQH
        j9UBzze6+fjxepl7Mm+W4+FBnFasb5UR+4PXOLhRxAuklygxk6JdQkKnhBgzGzvwCoG8Sgo9LWL1qWns
        7B3CpT8+Q/hpG4KbXXjK5C+IbEWU2QlDjwxDr4SULgkZFgkqs4T4ThlbemWksjWS5pzMAcJIIc0OPGFi
        jjpAzCffYjxJ46cbRMDlJ0gEgei6Jeh73DBcBPQWUHKJA+hI+jkyEFg6KYmAFWZgxHoA8KSh9udGbO4E
        VdbJPf0Ceb1DhrZnmpI6sblKAXWbBUIvoD4nQkuAGpK6S6SKeO/ZVeBrTqg63RC6x5DQRb/vlqEgL/9A
        RCs0VImcfkBVnU4gb0D5dSgqborYO+TBW70isi5IyL7gROmQCweH3dg36KLtk7Gtj82zKjlpGwmWAFMI
        DpI/IJN/4uPrQL65FspvN0H1XTKiKyOhP16AiluA8eoUyq65cIBpGCj/BXQPfHLVRWsulF138/viARm7
        B1zYMzhFnssGoXOETsG88wNQfLWOIBJJSVxR32xEduuXKLvhTfopXfN6TIisWYU9/cMcaj/Ns7X9Q24+
        LiXAD6/4BTJO/3yA1yoTEXs4ZhaCKe5oPMFswt6frBzGOORAXG04UuqToTHpUEIVMl7zEIgbpQRRZDmC
        jy7fQPEgJaEqLx+EYt2hsHkQPsVURSOhWouDtEWGplwk1yVD25CGxONx2N5m5FUooW3d3VeP7BYD3m7L
        poqMAo5xXu1lg4R9sWFREKbYw7FQf58BdYOaIFJnpEf8MQWKznfQ9tiR25qFd8/mE8hObG/fR4cktRqB
        BmHPTUwVwdQJHEJj0s9ctUiqo56j63MCyCGQXVyGJgMdaAxkPNAgpKNUmSPxEE6mzalKKtT1AoQGAXln
        CznEO6T05q3+g4QeWs8TLSVllQqqmkTaIh09sIJXJgGJJ9TY2pRJEPnIbX+PKvLmMkF4G0AgfwERldFI
        qdFB/QClVAvQ16VjS2MGDKfuSaAHuKCjCIXmD5B1JodO1hmQpdqA+xqju1aA/vQfWm4SPYzzRBVgybmo
        HbGOWh/cGDGQ53ir+Bum3b5WcTKg4q0ieS/ZKnroU8ia5x0FsFz+95rnPvKO3bGL3hbKeVZfzIKwsE+y
        14lyPBORvMirQGDEvNnrhJ2a6bkxD+S/jBWQhbECMj+AvwFcYDKpVk9dJAAAAABJRU5ErkJggg==
</value>
  </data>
</root>