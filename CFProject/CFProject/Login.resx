<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqiJkPsJKulK+PrKivj6yor4+sqK+P
        rKiwkq6UqoiZDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsJaxu7rF3/+7zOX/uMHa/7jB
        2v+4wdr/vNHo/7GVsroAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOft9y+zub/5unz/97a
        5//e2uf/3trn/+74//+3mbC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzoLrqyN/y/+74
        ///u+P//7vj//+74///u+P//u6C2ywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsqK99M7i
        9P/r9Pz/z8DR/8/A0f/r9Pz/7vj//8Cmu9kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoWuUE7as
        xvrT5vb/v6bC/6yM5/+sjuf/wKfC/+74///ItMfknHGOEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ9q
        jzC3t9H+2On4/7aYw/+tjej/tJXQ/7aZw//u+P//08jY851tjS8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACogp1et8Lb/97t+v+/psH/tJbO/8m2yf/CqcD/7vj//97a5/+le5lVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAsJCrl7zO5v/j8fv/5Ofx/7eZw/+0krP/7Pb9/+74///n7PX/roaigQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAK6Srr2+1+//6fX9/+74///Y0N//1s7d/+74///u+P//7vf//7CJpaIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACymLXOv9jv/+34///u+P//7vj//+74///u+P//7vj//+73//+1kqyvAAAAAAAA
        AAAAAAAAAAAAAAAAAACZZpkFtYuf8MKcqfrCnKj5wpyo+cKcqPnCnKj53sK/9MKcqPncvrz1toug7qpV
        qgMAAAAAAAAAAAAAAAAAAAAAAAAAALeOo664kKT1uI6j+LiOo/i4jqP4uI6j+LiOo/i4jqP4t46j9baO
        o64AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtoughLOJoK+3jqO3upKmwL6YqMjAmqvRwp2t2bmQ
        o9EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD4HwAA8A8AAPAPAADwDwAA8A8AAPAPAADwDwAA8A8AAOAH
        AADgBwAA4AcAAOAHAADgBwAA8A8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAoW2PRKR2l+2fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/o3eW7KJw
        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
        ///u+P//7vj//+74///u+P//7vj//+74///u+P//7vj//+74///u+P//7vj//7GMp/GgbYtLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqHmUvJ9sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbY3/0bO66dCxuemfbI3/n22N/9GzuunDoK7un2yN/6h5
        lbkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJxxjhKicI/95crA/+fN
        wv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fNwv/nzcL/583C/+fN
        wv/lysD/onCP/Z9wjxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKZ2
        kszTtLv8//Lj///y4///8uP///Lj///y4///8uP///Lj///y4///8uP///Lj///y4///8uP///Lj///y
        4///8uP///Lj/9O0u/yndpTLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAomyLIaRzkd+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59sjf+fbI3/n2yN/59s
        jf+fbI3/n2yN/59sjf+fbI3/pHOS3p9wjyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALKIoKOkcpL1qnqX8LCDm+61i6LuvZWo8MSfrvXLqrb70rO7/9i8
        wP/exMb/5M3L/+rV0P/w3dX/8NzV/6FujvsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJtvkBega44roGyPO59rjUqfbI5anmuNaZ5r
        jXmicZCMpHWTo6Z4lLemd5TJp3eU2aV0kualdZLstYugkQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////AA///gAH//4AB//+AAf//AAD//wAA//8A
        AP//AAD//wAA//8AAP//AAD//wAA//8AAP/+AAB//gAAf/4AAH/+AAB//gAAf/4AAH/+AAB//gAAf/wA
        AD/8AAA//AAAP/4AAH//AAD///8A////////////
</value>
  </data>
</root>